#!/bin/bash

# Command-line
[ $# -lt 2 -o "${1##*-}" == 'help' ] && cat << EOF && exit 1
USAGE: ${0##*/} [<option> ...] <source-pdf> <destination-dir>

SYNOPSIS:
  Convert the given PDF file to HTML and PNG images for easier/faster browsing.

OPTIONS:
  -d, --output-dpi     Output PNG images resolution (DPI) [default:120]

  -D, --input-dpi      Input PDF resolution (DPI) [default:image-dpi]
      For PDF document containing bitmap images, setting this option to 2-4x
      the output image resolution allows over-sampling of the input image
      and anti-aliasing to kick in the conversion process.

  -p, --include-pdf    Include original PDF file along the HTML/PNG output

  -cs, --charset       Filesystem character encoding [default:UTF-8]

  -nf, --no-frameset   Do not use FRAMESET in generated HTML

  -h, --html-template  HTML template used to replace the PDF file
      Any included '%FILE%', '%ID%' and '%PAGES%' anchors will be replaced with
      the approriate corresponding values.
      If not specified, the built-in template will be used.

AUTHOR:
  Cedric Dufour - http://cedric.dufour.name
EOF

# Arguments
IMG_DPI=120
PDF_DPI=
PDF_INCL=
CHARSET='UTF-8'
HTML_NOFRM=
HTML_TMPL=
SRC_PDF=
DST_DIR=
while [ -n "${1}" ]; do
  case "${1}" in
    '-d'|'--output-dpi')  
      shift; [ -z "${1}" ] && echo 'ERROR: Missing option value (-d)' >&2 && exit 1; IMG_DPI="${1}";;
    '-D'|'--input-dpi')
      shift; [ -z "${1}" ] && echo 'ERROR: Missing option value (-D)' >&2 && exit 1; PDF_DPI="${1}";;
    '-p'|'--include-pdf')
      PDF_INCL='yes';;
    '-cs'|'--charset')
      shift; [ -z "${1}" ] && echo 'ERROR: Missing option value (-cs)' >&2 && exit 1; CHARSET="${1}";;
    '-nf'|'--no-frameset')
      HTML_NOFRM='yes';;
    '-h'|'--html-template')
      shift; [ -z "${1}" ] && echo 'ERROR: Missing option value (-h)' >&2 && exit 1; HTML_TMPL="${1}";;
    *)
      if [ -z "${SRC_PDF}" ]; then SRC_PDF="${1}"
      elif [ -z "${DST_DIR}" ]; then DST_DIR="${1}"
      else echo "ERROR: Invalid (extra) argument (${1})" >&2 && exit 1
      fi
      ;;
  esac
  shift
done
[ -z "${PDF_DPI}" ] && PDF_DPI=${IMG_DPI}

# Check dependencies
[ -z "$(which convert)" ] && echo "ERROR[$$]: 'convert' cannot be found (ImageMagick)" >&2 && exit 1

# Check directories and files
DST_DIR="${DST_DIR%%/}"
[ ! -r "${SRC_PDF}" ] && echo "ERROR[$$]: Unable to read source PDF file (${SRC_PDF})" >&2 && exit 1
[ ! -d "${DST_DIR}" ] && echo "ERROR[$$]: Invalid destination directory (${DST_DIR})" >&2 && exit 1
[ ! -w "${DST_DIR}" ] && echo "ERROR[$$]: Unable to write to destination directory (${DST_DIR})" >&2 && exit 1
[ -n "${HTML_TMPL}" ] && [ ! -r "${HTML_TMPL}" ] && echo "ERROR[$$]: Unable to read HTML template file (${HTML_TMPL})" >&2 && exit 1

# Convert
f_dst="${SRC_PDF##*/}"
p_dst="${DST_DIR}/${f_dst}"
f_dst_prefix="${f_dst%.*}"
f_dst_id="$(echo ${f_dst_prefix} | cksum | cut -d' ' -f1)"
p_dst_prefix="${DST_DIR}/${f_dst_prefix}"
[ "${PDF_INCL}" == 'yes' ] && cp "${SRC_PDF}" "${p_dst}"
[ ! -e "${p_dst_prefix}" ] && mkdir "${p_dst_prefix}"
[ ! -d "${p_dst_prefix}" ] && echo "ERROR[$$]: Failed to create destination directory (${p_dst_prefix})" >&2 && exit 1
# NOTE:
#  - Let's use and 8-bit palette and highest Zlib compression (with no adaptive filtering), which gives the best size/quality ratio for eVFRM PDF files
#  - Let's allow over-sampling in order to cope with PDF containing bitmap images (and thus allow anti-aliasing nonetheless)
[ ${PDF_DPI} == ${IMG_DPI} ] && resize='' || resize="-resize $(( 100 * ${IMG_DPI} / ${PDF_DPI} ))%"
convert -density ${PDF_DPI} "${SRC_PDF}" -filter blackman ${resize} -define png:color-type=3 -define png:bit-depth=8 -type palette -quality 90 "${p_dst_prefix}/img.png" 2>/dev/null
pages_pdf="$(ls -1 "${p_dst_prefix}"/*.png | wc -l)"
if [ -n "${HTML_TMPL}" ]; then
  cp "${HTML_TMPL}" "${p_dst_prefix}.html"
  sed -i "s|%FILE%|${f_dst_prefix}|g;s|%ID%|${f_dst_id}|g;s|%PAGES%|${pages_pdf}|g" "${p_dst_prefix}.html"
elif [ -n "${HTML_NOFRM}" ]; then
  cat << EOF > "${p_dst_prefix}.html"
<HTML>
<HEAD>
<META HTTP-EQUIV="content-type" CONTENT="text/html; charset=${CHARSET}" />
<TITLE>${f_dst_prefix}</TITLE>
<STYLE TYPE="text/css">
BODY {MARGIN:5px;}
DIV.pdf TABLE {MARGIN:0px;FONT:12px sans-serif;BORDER:none;BORDER-COLLAPSE:collapse;}
DIV.pdf TD {PADDING:0px;}
DIV.pdf TABLE.nav TD {PADDING:0px 10px;FONT-SIZE:20px;}
DIV.pdf TABLE.sel TD {PADDING:0px 2px;FONT-SIZE:16px;}
DIV.pdf SELECT {FONT:16px sans-serif;BORDER:solid 1px #000000;}
DIV.pdf A {PADDING:0px 10px;COLOR:#000000;TEXT-DECORATION:none;}
DIV.pdf A:hover {FONT-WEIGHT:bold;}
DIV.pdf A:visited {COLOR:#000000;}
</STYLE>
<SCRIPT TYPE="text/javascript">
var pFile='${f_dst_prefix}/img';
var pPages=${pages_pdf};
var oGoto=null;
var oImg=null;
function init() {
  oGoto=document.getElementById('goto');
  oPage=document.getElementById('page');
  for(i=0;i<pPages;i++) oGoto.options[i]=new Option(i+1);
}
function show(p) {
  if(p<0) p=0; else if(p>=pPages) p=pPages-1;
  oPage.src=( pPages>1 ? pFile+'-'+p+'.png' : pFile+'.png' );
  oGoto.selectedIndex=p;
}
</SCRIPT>
</HEAD>
<BODY ONLOAD="javascript:init();show(0);">
<DIV CLASS="pdf">
<TABLE CLASS="nav"><TR>
<TD><A HREF="javascript:;" ONCLICK="javascript:show(0);">&laquo;</A></TD>
<TD><A HREF="javascript:;" ONCLICK="javascript:show(oGoto.selectedIndex-1);">&lsaquo;</A></TD>
<TD><TABLE CLASS="sel"><TR><TD><SELECT ID="goto" ONCHANGE="javascript:show(oGoto.selectedIndex);"></SELECT></TD><TD>/</TD><TD>${pages_pdf}</TD></TR></TABLE></TD>
<TD><A HREF="javascript:;" ONCLICK="javascript:show(oGoto.selectedIndex+1);">&rsaquo;</A></TD>
<TD><A HREF="javascript:;" ONCLICK="javascript:show(999999);">&raquo;</A></TD>
${PDF_INCL/yes/<TD><A HREF="${f_dst}">&nabla;</A></TD>}
</TR></TABLE>
<TABLE><TR><TD><IMG ID="page"/></TD></TR></TABLE>
</DIV>
</BODY>
</HTML>
EOF
else
  cat << EOF > "${p_dst_prefix}.html"
<HTML>
<HEAD>
<META HTTP-EQUIV="content-type" CONTENT="text/html; charset=${CHARSET}" />
<TITLE>${f_dst_prefix}</TITLE>
</HEAD>
<FRAMESET ROWS="30,*" BORDER="0">
<FRAME FRAMEBORDER="0" SCROLLING="no" NORESIZE SRC="${f_dst_prefix}_top.html" />
<FRAME NAME="PDF_${f_dst_id}_page" FRAMEBORDER="0" SCROLLING="auto" />
</FRAMESET>
</HTML>
EOF
  cat << EOF > "${p_dst_prefix}_top.html"
<HTML>
<HEAD>
<META HTTP-EQUIV="content-type" CONTENT="text/html; charset=${CHARSET}" />
<TITLE>${f_dst_prefix}</TITLE>
<STYLE TYPE="text/css">
BODY {MARGIN:5px;}
DIV.pdf TABLE {MARGIN:0px;FONT:12px sans-serif;BORDER:none;BORDER-COLLAPSE:collapse;}
DIV.pdf TD {PADDING:0px;}
DIV.pdf TABLE.nav TD {PADDING:0px 10px;FONT-SIZE:20px;}
DIV.pdf TABLE.sel TD {PADDING:0px 2px;FONT-SIZE:16px;}
DIV.pdf SELECT {FONT:16px sans-serif;BORDER:solid 1px #000000;}
DIV.pdf A {PADDING:0px 10px;COLOR:#000000;TEXT-DECORATION:none;}
DIV.pdf A:hover {FONT-WEIGHT:bold;}
DIV.pdf A:visited {COLOR:#000000;}
</STYLE>
<SCRIPT TYPE="text/javascript">
var pFile='${f_dst_prefix}/img';
var pPages=${pages_pdf};
var oGoto=null;
var oImg=null;
function init() {
  oGoto=document.getElementById('goto');
  oPage=parent.PDF_${f_dst_id}_page;
  for(i=0;i<pPages;i++) oGoto.options[i]=new Option(i+1);
}
function show(p) {
  if(p<0) p=0; else if(p>=pPages) p=pPages-1;
  oPage.location.replace( pPages>1 ? pFile+'-'+p+'.png' : pFile+'.png' );
  oGoto.selectedIndex=p;
}
</SCRIPT>
</HEAD>
<BODY ONLOAD="javascript:init();show(0);">
<DIV CLASS="pdf">
<TABLE CLASS=nav><TR>
<TD><A HREF="javascript:;" ONCLICK="javascript:show(0);">&laquo;</A></TD>
<TD><A HREF="javascript:;" ONCLICK="javascript:show(oGoto.selectedIndex-1);">&lsaquo;</A></TD>
<TD><TABLE CLASS="sel"><TR><TD><SELECT ID="goto" ONCHANGE="javascript:show(oGoto.selectedIndex);"></SELECT></TD><TD>/</TD><TD>${pages_pdf}</TD></TR></TABLE></TD>
<TD><A HREF="javascript:;" ONCLICK="javascript:show(oGoto.selectedIndex+1);">&rsaquo;</A></TD>
<TD><A HREF="javascript:;" ONCLICK="javascript:show(999999);">&raquo;</A></TD>
${PDF_INCL/yes/<TD><A HREF="${f_dst}">&nabla;</A></TD>}
</TR></TABLE>
</DIV>
</BODY>
</HTML>
EOF
fi

# Done
exit 0

