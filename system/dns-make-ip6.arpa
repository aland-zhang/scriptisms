#!/bin/bash


## Usage
[ $# -lt 5 -o "${1##*-}" == "help" ] && cat >&2 << EOF && exit 1
USAGE: ${0##*/} <domain> <name-servers> <soa-file-absolute-path> <ip6-segment/length> <forward-file> [<forward-file> ...]

SYNOPSIS:
  Generate the reverse lookup zone corresponging to the given IPv6 segment
  (which length MUST match 16-bit multiple) and given DNS forward resources.

EXAMPLE:
  ${0##*/} domain.net ns1.domain.net,ns2.domain.net /path/to/soa.inc 2001:db8::/32 /path/to/zone.forward

AUTHOR:
  Cedric Dufour - http://cedric.dufour.name
EOF


## Arguments
MY_DOMAIN="$1"; shift
MY_NAMESERVERS="$1"; shift
MY_SOA_PATH="$1"; shift
MY_SEGMENT="$1"; shift
[ -z "$(echo "${MY_SEGMENT}" | egrep '^[:0-9a-f]{2,39}/(16|32|48|64|80|96|112)$')" ] && echo "ERROR: Invalid IPv6 segment (${MY_SEGMENT})" >&2 && exit 1


## Functions
function __canonical {
  my_ip_raw="${1}"
  my_ip_group=$(( ${2} / 16 ))
  my_ip_prefix=
  while true; do
    [ ${my_ip_group} -le 0 ] && break
    [ "${my_ip_raw:0:1}" == ':' ] && break
    my_ip_prefix="${my_ip_prefix}$(printf '%.4x' 0x0${my_ip_raw%%:*})"
    my_ip_group=$(( ${my_ip_group} -1 ))
    [[ "${my_ip_raw}" == *':'* ]] || break
    my_ip_raw="${my_ip_raw#*:}"
  done
  my_ip_suffix=
  while true; do
    [ ${my_ip_group} -le 0 ] && break
    [ -z "${my_ip_raw}" ] && break
    my_ip_suffix="${my_ip_suffix}$(printf '%.4x' 0x0${my_ip_raw%%:*})"
    my_ip_group=$(( ${my_ip_group} -1 ))
    [[ "${my_ip_raw}" == *':'* ]] || break
    my_ip_raw="${my_ip_raw#*:}"
  done
  my_ip_0s=
  while true; do
    [ ${my_ip_group} -le 0 ] && break
    my_ip_0s="${my_ip_0s}$(printf '%.4x' 0x0)"
    my_ip_group=$(( ${my_ip_group} -1 ))
  done
  echo "${my_ip_prefix}${my_ip_0s}${my_ip_suffix}"
}

function __nibbles {
  my_ip_canonical="${1}"
  my_ip_nibbles=
  my_ip_lastidx=$(( ${#my_ip_canonical} - 1 ))
  for i in $(seq 0 ${my_ip_lastidx}); do
    my_ip_nibbles="${my_ip_nibbles}${my_ip_nibbles:+.}${my_ip_canonical:$((${my_ip_lastidx}-${i})):1}"
  done
  echo "${my_ip_nibbles}"
}


## Parameters
MY_SEGMENT_PREFIX="${MY_SEGMENT%/*}"
MY_SEGMENT_LENGTH="${MY_SEGMENT#*/}"
MY_SEGMENT_CANONICAL="$(__canonical "${MY_SEGMENT_PREFIX}" "${MY_SEGMENT_LENGTH}")"
MY_SEGMENT_NIBBLES="$(__nibbles "${MY_SEGMENT_CANONICAL}")"



## Create reverse zone

# Create SOA entry
cat << EOF
;; WARNING: File automatically generated by '${0##*/}'

;; SOA
\$INCLUDE ${MY_SOA_PATH}

EOF

# Create NS entries
echo '; NS Servers'
for ns in $(echo "${MY_NAMESERVERS}" | tr ',' ' '); do
  echo -e "@\tIN\tNS\t${ns}."
done

# Loop through forward files
cat << EOF


;; Hosts
\$ORIGIN ${MY_SEGMENT_NIBBLES}.ip6.arpa.
EOF
for file_forward in "$@"; do
  for my_record in $(grep -v '^\s*;' "${file_forward}" | egrep "AAAA\s\s*${MY_SEGMENT_PREFIX%%:}:" | sed 's/^\([-.a-zA-Z0-9]*\).*AAAA\s\s*/\1|/;s/\(|[:0-9a-f]*\).*$/\1/'); do
    my_hostname="${my_record%|*}"
    my_aaaa="${my_record#*|}"
    my_aaaa_canonical="$(__canonical "${my_aaaa}" 128)"
    my_aaaa_nibbles="$(__nibbles "${my_aaaa_canonical}")"
    echo -e "${my_aaaa_nibbles%.${MY_SEGMENT_NIBBLES}}\tIN\tPTR\t${my_hostname}.${MY_DOMAIN}."
  done
done

